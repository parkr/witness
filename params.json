{"name":"Witness","tagline":"A chat log server for humans","body":"## Installation\r\n\r\n    $ git clone git://github.com/parkr/chat-log-server.git\r\n    $ cd chat-log-server\r\n    $ # write configuration files based on samples in config/\r\n    $ mkdir public; mkdir tmp # if they don't exist\r\n    $ bundle install\r\n    $ touch tmp/restart.txt\r\n\r\nYou're rearing to go!\r\n\r\n## Usage\r\n\r\nSend HTTP POST requests to `/api/messages/log` with the following JSON-encoded data:\r\n\r\n    {\r\n        room: <room-name>,\r\n        author: <author>,\r\n        message: <message>,\r\n        time: <time-message-was-sent>\r\n    }\r\n\r\nTo fetch the latest messages in JSON, send an HTTP GET request to `/api/messages/latest`.\r\nYou can optionally provide a `limit` value in the GET query string.\r\n\r\nAll requests to the API must be sent with an `access_token`, which must be included in\r\n`config/auth.yml` on the server. If the access token is not there, the requesting service\r\nwill receive a 403 Forbidden response.\r\n\r\n## Hubot as Stenographer\r\n\r\nHubot is an amazing thing, and is particularly well-suited for use with this project.\r\nHubot can \"listen\" to what it hears and act based on what it hears. Luckily for us,\r\nthis hearing is not tied to any term or terms, so we can instruct Hubot to take everything\r\nit hears and do something with the message.\r\n\r\nI created [a stripped-down Hubot](https://github.com/parkr/stenographer), lovingly nick-named\r\n\"stenographer\", which sends the appropriate HTTP POST request to Witness's `/api/messages/log`\r\nendpoint with each message it hears. Clone it, set a couple environment variables and push\r\nit up to Heroku and voil√†!\r\n\r\n## Contribute\r\n\r\n    $ # fork on github\r\n    $ git clone git@github.com:<your-username>/chat-log-server.git\r\n    $ bundle install\r\n    $ git checkout -b <my-new-feature-name>\r\n    $ bundle exec rake preview\r\n    $ # edit you files, making sure to restart the server every time you edit a Ruby file\r\n    $ git add <files-you-edited>\r\n    $ git commit -m \"<a-short-commit-message>\"\r\n    $ git push origin <my-new-feature-name>\r\n    $ # submit a pull request on GitHub to https://github.com/parkr/chat-log-server\r\n\r\n## License\r\n\r\n    The MIT License (MIT)\r\n\r\n    Copyright (c) 2013 [Parker Moore](http://parkermoore.de)\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in\r\n    all copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}